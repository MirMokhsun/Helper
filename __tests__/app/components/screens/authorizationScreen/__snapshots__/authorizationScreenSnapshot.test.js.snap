// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`create snapshot AuthorizationScreen 1`] = `
<KeyboardAvoidingView
  behavior="padding"
  enabled={true}
  keyboardVerticalOffset={0}
  style={
    Object {
      "backgroundColor": "#E5E5E5",
      "height": "100%",
      "left": 0,
      "position": "absolute",
      "top": 0,
      "width": "100%",
    }
  }
>
  <StatusBar
    animated={false}
    backgroundColor="#000756"
    barStyle="light-content"
    showHideTransition="fade"
  />
  <ScrollViewMock
    contentContainerStyle={
      Object {
        "alignItems": "center",
      }
    }
    keyboardShouldPersistTaps="handled"
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "left": 0,
          "position": "absolute",
          "top": -50,
        }
      }
    >
      <Background />
    </View>
    <View
      style={
        Object {
          "height": 25,
          "justifyContent": "flex-start",
          "marginBottom": 10,
          "marginTop": 50,
          "width": "100%",
        }
      }
    >
      <withNavigation(ButtonBack)
        id="AuthorizationID"
      />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "height": 35,
          "justifyContent": "center",
          "marginVertical": 20,
          "width": "100%",
        }
      }
    >
      <Logo />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 10,
          "flexDirection": "column",
          "justifyContent": "space-around",
          "marginVertical": 20,
          "minHeight": 667,
          "width": "90%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#000756",
            "fontFamily": "Roboto",
            "fontSize": 22,
            "fontWeight": "bold",
            "lineHeight": 32,
            "marginVertical": 25,
            "textAlign": "center",
          }
        }
      >
        Войти в аккаунт
      </Text>
      <CommonInput
        action={[Function]}
        currentLanguageName="ru"
        errorText="Ошибка ввода e-mail"
        filter={/\\^\\(\\(\\[\\^<>\\(\\)\\\\\\[\\\\\\]\\\\\\\\\\.,;:\\\\s@"\\]\\+\\(\\\\\\.\\[\\^<>\\(\\)\\\\\\[\\\\\\]\\\\\\\\\\.,;:\\\\s@"\\]\\+\\)\\*\\)\\|\\("\\.\\+"\\)\\)@\\(\\(\\\\\\[\\[0-9\\]\\{1,3\\}\\\\\\.\\[0-9\\]\\{1,3\\}\\\\\\.\\[0-9\\]\\{1,3\\}\\\\\\.\\[0-9\\]\\{1,3\\}\\\\\\]\\)\\|\\(\\(\\[a-zA-Z\\\\-0-9\\]\\+\\\\\\.\\)\\+\\[a-zA-Z\\]\\{2,\\}\\)\\)\\$/}
        keyboardType="email-address"
        placeholder="Email"
        testID="InputEmailAutorizationID"
        textErrorID="InputErrorEmailAutorizationID"
      />
      <InputPasswordWithSVG
        action={[Function]}
        currentLanguageName="ru"
        errorText="Ошибка ввода пароля"
        filter={/\\.\\{6,\\}/}
        placeholder="Пароль"
        testID="InputPasswordWithSVGID"
        textErrorID="InputPasswordWithSVGErrorID"
      />
      <withNavigation(ButtonForgotPassword)
        text="Забыли пароль?"
      />
      <ButtonSubmit
        isDisabled={true}
        isShowSpiner={true}
        onPress={[Function]}
        testID="ButtonSubmitAutorizationID"
        text="Вход"
      />
    </View>
  </ScrollViewMock>
</KeyboardAvoidingView>
`;
